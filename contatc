local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

repeat task.wait() until Players.LocalPlayer and ReplicatedStorage:FindFirstChildWhichIsA("RemoteEvent")
local LocalPlayer = Players.LocalPlayer

local ProtecaoAtiva = true
local SCAN_RADIUS = 60132

local listaNegra = {
    "kick","Kick","KICK","ban","Ban","BAN","removeplayer","RemovePlayer","REMOVEPLAYER",
    "disconnect","Disconnect","DISCONNECT","shutdown","Shutdown","SHUTDOWN","crash","Crash","CRASH",
    "kickplayer","KickPlayer","KICKPLAYER","teleport","Teleport","TELEPORT","rejoin","Rejoin","REJOIN",
    "crashclient","CrashClient","CRASHCLIENT","expulsar","Expulsar","EXPULSAR","travar","Travar","TRAVAR",
    "serverkick","ServerKick","SERVERKICK","serverban","ServerBan","SERVERBAN","banplayer","BanPlayer","BANPLAYER",
    "kickuser","KickUser","KICKUSER","banuser","BanUser","BANUSER","removeuser","RemoveUser","REMOVEUSER",
    "destroyplayer","DestroyPlayer","DESTROYPLAYER","deleteplayer","DeletePlayer","DELETEPLAYER",
    "forceleave","ForceLeave","FORCELEAVE","forceremove","ForceRemove","FORCEREMOVE",
    "playerkick","PlayerKick","PLAYERKICK","playerban","PlayerBan","PLAYERBAN",
    "userkick","UserKick","USERKICK","userban","UserBan","USERBAN",
    "clientkick","ClientKick","CLIENTKICK","clientban","ClientBan","CLIENTBAN",
    "gamekick","GameKick","GAMEKICK","gameban","GameBan","GAMEBAN",
    "kickfromgame","KickFromGame","KICKFROMGAME","banfromgame","BanFromGame","BANFROMGAME",
    "terminate","Terminate","TERMINATE","exit","Exit","EXIT","quit","Quit","QUIT",
    "leave","Leave","LEAVE","destroy","Destroy","DESTROY","remove","Remove","REMOVE"
}

local function naListaNegra(str)
    if not ProtecaoAtiva then return false end
    if typeof(str) ~= "string" then return false end
    for _, palavra in ipairs(listaNegra) do
        if str == palavra or str:find(palavra) then return true end
    end
    return false
end

pcall(function()
    if not ReplicatedStorage:FindFirstChild("AntiBan") then
        local fakeRemote = Instance.new("RemoteEvent")
        fakeRemote.Name = "AntiBan"
        fakeRemote.Parent = ReplicatedStorage
        fakeRemote.OnClientEvent:Connect(function()
            if ProtecaoAtiva then
                warn("[AntiBanRemote] Tentativa de ban bloqueada!")
            end
        end)
    end
end)

pcall(function()
    local mt = getrawmetatable(LocalPlayer)
    setreadonly(mt, false)
    local oldIndex = mt.__index
    mt.__index = newcclosure(function(self, key)
        if ProtecaoAtiva and self == LocalPlayer and (key == "Kick" or key == "kick" or key == "Ban" or key == "ban") then
            warn("[KickBlocker] Tentativa bloqueada: " .. tostring(key))
            return function() end
        end
        return oldIndex(self, key)
    end)
    setreadonly(mt, true)
end)

pcall(function()
    local mt = getrawmetatable(game)
    setreadonly(mt, false)
    local oldNamecall = mt.__namecall
    mt.__namecall = newcclosure(function(self, ...)
        local method = getnamecallmethod()
        if typeof(self) == "Instance" and ProtecaoAtiva then
            if self == LocalPlayer and (method == "Kick" or method == "kick" or method == "Ban" or method == "ban") then
                warn("[KickBlocker] " .. method .. " bloqueado.")
                return
            end
            if (method == "FireServer" or method == "InvokeServer") and naListaNegra(self.Name) then
                warn("[RemoteBlocker] Remote bloqueado: "..self:GetFullName())
                return nil
            end
            if (method == "FireClient" or method == "FireAllClients") and naListaNegra(self.Name) then
                warn("[RemoteBlocker] FireClient bloqueado: "..self:GetFullName())
                return nil
            end
        end
        return oldNamecall(self, ...)
    end)
    setreadonly(mt, true)
end)

pcall(function()
    local mt = getrawmetatable(game)
    setreadonly(mt, false)
    local oldIndex = mt.__index
    mt.__index = newcclosure(function(self, key)
        if typeof(self) == "Instance" and ProtecaoAtiva then
            if (self:IsA("RemoteEvent") and key == "OnClientEvent") or (self:IsA("RemoteFunction") and key == "OnClientInvoke") then
                if naListaNegra(self.Name) then
                    warn("[CallbackBlocker] Callback bloqueado: "..self:GetFullName())
                    return function() return nil end
                end
            end
        end
        return oldIndex(self, key)
    end)
    setreadonly(mt, true)
end)

task.defer(function()
    for _, v in ipairs(getgc(true)) do
        if typeof(v) == "function" and islclosure(v) then
            local info = debug.getinfo(v)
            if info and info.name and naListaNegra(info.name) then
                pcall(function()
                    hookfunction(v, function(...)
                        if ProtecaoAtiva then
                            warn("[getgcProtector] Funcao bloqueada: "..info.name)
                            return nil
                        end
                        return v(...)
                    end)
                end)
            end
        end
    end
end)

if queue_on_teleport then
    queue_on_teleport([[print("[AutoReconnect] Reconectando...")]])
end

LocalPlayer.OnTeleport:Connect(function(state)
    if state == Enum.TeleportState.Started and ProtecaoAtiva then
        warn("[AutoReconnect] Detectado teleporte/kick")
    end
end)

local function pegarAssentoProx()
    local char = LocalPlayer.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return nil end
    local root = char.HumanoidRootPart
    local assentoProx = nil
    local menorDist = math.huge
    for _, obj in ipairs(workspace:GetDescendants()) do
        if (obj:IsA("Seat") or obj:IsA("VehicleSeat")) and obj.Occupant == nil then
            local dist = (obj.Position - root.Position).Magnitude
            if dist < menorDist and dist <= SCAN_RADIUS then
                menorDist = dist
                assentoProx = obj
            end
        end
    end
    return assentoProx
end

local function tentarSentar()
    local assento = pegarAssentoProx()
    if assento then
        local char = LocalPlayer.Character
        if char and char:FindFirstChild("Humanoid") then
            local humanoide = char:FindFirstChildOfClass("Humanoid")
            char:SetPrimaryPartCFrame(assento.CFrame + Vector3.new(0,2,0))
            task.wait(0.2)
            humanoide:Sit()
        end
    end
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.Z then
        tentarSentar()
    end
end)

warn("[Reg]")
